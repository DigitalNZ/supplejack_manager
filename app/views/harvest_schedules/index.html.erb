<h2>Job Schedules - <%= params[:environment].capitalize %></h2>

<%= link_to "New Schedule", new_environment_harvest_schedule_path(params[:environment]), class: "button float-right #{ can_show_button(:create, HarvestSchedule) }" %>

<%= form_tag update_all_environment_harvest_schedules_path, method: 'put', id: 'update-all-jobs' do %>
  <%= hidden_field_tag 'harvest_schedule[status]', (@active_jobs ? 'stopped' : 'active') %>
  <%= submit_tag (@active_jobs ? 'Pause All' : 'Resume all'), class: 'button alert float-right' %>
<% end %>

<br />

<h3>One-off</h3>

<table>
  <thead>
    <tr>
      <th><%= t("harvest_schedules.parser") %></th>
      <th><%= t("harvest_schedules.start_time") %></th>
      <th><%= t("harvest_schedules.environment") %></th>
      <th><%= t("harvest_schedules.mode") %></th>
      <th></th>
    </tr>
  </thead>

  <tbody>
    <% if @one_off_schedules.any? %>

      <% @one_off_schedules.each do |schedule| %>
        <% if schedule.parser %>

          <tr>
            <td>
              <% if can? :update, schedule.parser %>
                <%= link_to schedule.parser.try(:name), edit_parser_path(schedule.parser) %>
              <% else %>
                <%= schedule.parser.try(:name) %>
              <% end %>
            </td>
            <td><%= l schedule.start_time, format: :long %></td>
            <td><%= schedule.environment %></td>
            <td><%= schedule.mode.try(:titleize) %></td>
            <td>
              <% if can? :update, schedule %>
                <%= link_to t("edit"), edit_environment_harvest_schedule_path(params[:environment], id: schedule.id) %>
                <br />
                <%= link_to t("delete"), harvest_schedule_path(id: schedule.id), method: :delete, confirm: t("harvest_schedules.confirm_delete") %>
                <br />
                <%= form_tag harvest_schedule_path(id: schedule.id), method: 'put' do %>
                  <%= hidden_field_tag 'harvest_schedule[status]', pause_resume_value_for(schedule) %>
                  <%= submit_tag pause_resume_class_for(schedule).titleize, class: pause_resume_class_for(schedule) %>
                <% end %>
            <% end %>
            </td>
          </tr>

        <% end %>
      <% end %>
    <% else %>

      <tr>
        <td colspan="5"><p><%= t("harvest_schedules.no_one_off_schedules") %></p></td>
      </tr>

    <% end %>
  </tbody>
</table>

<h3>Recurrent</h3>

<table id="harvest_schedules">
  <thead>
    <tr>
      <th><%= t("harvest_schedules.parser") %></th>
      <th><%= t("harvest_schedules.next_run_at") %></th>
      <th><%= t("harvest_schedules.last_run_at") %></th>
      <th><%= t("harvest_schedules.start_time") %></th>
      <th><%= t("harvest_schedules.environment") %></th>
      <th><%= t("harvest_schedules.mode") %></th>
      <th><%= t("harvest_schedules.frequency") %></th>
      <th><%= t("harvest_schedules.time") %></th>
      <th></th>
    </tr>
  </thead>

  <tbody>
    <% @recurrent_schedules.each do |schedule| %>
      <% if schedule.parser %>

        <tr>
          <td>
            <% if can? :update, schedule.parser %>
              <%= link_to schedule.parser.try(:name), edit_parser_path(schedule.parser) %>
            <% else %>
              <%= schedule.parser.try(:name) %>
            <% end %>
          </td>

          <td><%= l schedule.next_run_at, format: :short %></td>

          <td><%= schedule.last_run_at ? (l schedule.last_run_at, format: :short) : 'Havent run' %></td>

          <% if schedule.next_run_at > DateTime.now %>
            <td class="grey-out"><%= l schedule.start_time, format: :first_run_at %></td>
          <% else %>
            <td><%= l schedule.start_time, format: :first_run_at %></td>
          <% end %>

          <td><%= schedule.environment %></td>

          <td><%= schedule.mode.try(:titleize) %></td>

          <% if schedule.frequency.present? %>
            <td><%= schedule.frequency %> at <%= schedule.at_hour.to_s.rjust(2, "0") %>:<%= schedule.at_minutes.to_s.rjust(2, "0") %> (<%= schedule.cron %>)</td>
            <td><%= schedule.at_hour.to_s.rjust(2, "0") %>:<%= schedule.at_minutes.to_s.rjust(2, "0") %></td>
          <% else %>
            <td><%= schedule.cron %></td>
          <% end %>
          <td>
            <% if can? :update, schedule %>
              <%= link_to t("edit"), edit_environment_harvest_schedule_path(params[:environment], id: schedule.id) %>
              <br />
              <%= link_to t("delete"), harvest_schedule_path(id: schedule.id), method: :delete, confirm: t("harvest_schedules.confirm_delete") %>
              <br />
                <%= form_tag harvest_schedule_path(id: schedule.id), method: 'put' do %>
                  <%= hidden_field_tag 'harvest_schedule[status]', pause_resume_value_for(schedule) %>
                  <%= submit_tag pause_resume_class_for(schedule).titleize, class: pause_resume_class_for(schedule) %>
                <% end %>
            <% end %>
          </td>
        </tr>


      <% end %>
    <% end %>
  </tbody>
</table>
